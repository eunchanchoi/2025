import streamlit as st

st.set_page_config(page_title="MBTI 스타일 발명품 추천기", page_icon="💡", layout="centered")

st.markdown(
    """
    <h1 style='text-align: center; font-size: 45px;'>
    🌟🤖 나만의 발명품 MBTI 테스트 💡✨
    </h1>
    <h3 style='text-align: center; color: gray;'>
    10개의 질문에 답하면, 당신에게 꼭 맞는 발명품을 추천해드립니다 🚀
    </h3>
    """,
    unsafe_allow_html=True
)

# ---------------- 발명품 후보 (30개) ---------------- #
inventions = {
    "스마트 안마 침대 🛏️💆": 0,
    "AI 로봇 선생님 🤖✍️": 0,
    "스마트 쿠커 🍲🤖": 0,
    "스마트 정리 로봇 📦🤖": 0,
    "드림 리코더 🌙📽️": 0,
    "시간 확장 워치 ⌚✨": 0,
    "홀로그램 북 📚🎥": 0,
    "무한 스낵 머신 🍩🍫": 0,
    "스마트 알람 ☀️☕": 0,
    "암기 헬멧 🪖✨": 0,
    "AR 내비게이션 안경 👓➡️": 0,
    "숙면 캡슐 🛌🎶": 0,
    "헬스 트레이너 로봇 💪🤖": 0,
    "무한 재미 박스 🎮📺": 0,
    "지갑 가드 💳🚫": 0,
    "친구 홀로그램 소환기 🪄🖼️": 0,
    "자동 우산 ☂️🌬️": 0,
    "뇌파 번역기 🧠🔊": 0,
    "스마트 옷 🌈👔": 0,
    "스마트 신발 👟⚡": 0,
    "스트레스 분석 시계 🧘⌚": 0,
    "즉석 여행 생성기 ✈️🧳": 0,
    "기분 맞춤 음악 스피커 🎵🎶": 0,
    "무한 배터리 파워팩 🔋⚡": 0,
    "날씨 컨트롤러 🌦️❄️☀️": 0,
    "자동 청소 드론 🛸🧹": 0,
    "AI 대화 친구 🤖💬": 0,
    "미래 예측 노트북 📓🔮": 0,
    "기억 보관 장치 💾🧠": 0,
    "마법 냉장고 🧊🍎": 0
}

# ---------------- 질문 (10개) ---------------- #
questions = [
    ("Q1. 지금 가장 필요한 건?", ["휴식 😴", "공부 효율 📚", "집안일 도움 🧹", "재미 🎮"]),
    ("Q2. 평소에 가장 많이 하는 활동은?", ["공부/일", "운동", "게임/여가", "집안일"]),
    ("Q3. 제일 귀찮은 건 뭐예요?", ["정리 정돈", "요리", "공부/일", "잠 못 자는 것"]),
    ("Q4. 친구들과의 약속이 취소됐다면?", ["집에서 쉰다", "운동한다", "게임한다", "혼자 공부한다"]),
    ("Q5. 여행 갈 때 가장 필요한 건?", ["체력 🔋", "지도 🗺️", "시간 관리 ⏳", "간식 🍫"]),
    ("Q6. 가장 갖고 싶은 능력은?", ["순간이동 🚀", "초집중 🧠", "자동 청소 ✨", "예지력 🔮"]),
    ("Q7. 가장 스트레스 받을 때는?", ["피곤할 때", "시험/일 많을 때", "돈 부족할 때", "심심할 때"]),
    ("Q8. 좋아하는 취미는?", ["책 읽기", "요리", "운동", "음악 듣기"]),
    ("Q9. 미래의 내가 필요로 할 건?", ["건강", "지식", "편리함", "재미"]),
    ("Q10. 하루에 더 필요하다고 생각하는 건?", ["시간", "에너지", "돈", "친구"])
]

# ---------------- 질문 로직 ---------------- #
answers = []

for q, opts in questions:
    ans = st.radio(q, opts, key=q)  # 각 질문마다 고유 key
    answers.append(ans)

# ---------------- 점수 부여 ---------------- #
if st.button("✨ 나만의 발명품 확인하기 🚀"):
    for ans in answers:
        # 휴식 관련 답변
        if ans in ["휴식 😴", "피곤할 때", "잠 못 자는 것"]:
            inventions["스마트 안마 침대 🛏️💆"] += 2
            inventions["숙면 캡슐 🛌🎶"] += 2
            inventions["드림 리코더 🌙📽️"] += 1
        
        # 공부/효율 관련
        if ans in ["공부 효율 📚", "공부/일", "시험/일 많을 때", "지식"]:
            inventions["AI 로봇 선생님 🤖✍️"] += 3
            inventions["암기 헬멧 🪖✨"] += 2
            inventions["시간 확장 워치 ⌚✨"] += 1
        
        # 집안일 관련
        if ans in ["집안일 도움 🧹", "집안일", "정리 정돈", "자동 청소 ✨"]:
            inventions["스마트 정리 로봇 📦🤖"] += 3
            inventions["자동 청소 드론 🛸🧹"] += 2
            inventions["마법 냉장고 🧊🍎"] += 1
        
        # 재미 관련
        if ans in ["재미 🎮", "게임/여가", "게임한다", "재미"]:
            inventions["무한 재미 박스 🎮📺"] += 3
            inventions["드림 리코더 🌙📽️"] += 1
            inventions["AI 대화 친구 🤖💬"] += 1
        
        # 운동/체력
        if ans in ["운동", "체력 🔋", "건강"]:
            inventions["헬스 트레이너 로봇 💪🤖"] += 2
            inventions["스마트 신발 👟⚡"] += 2
            inventions["스트레스 분석 시계 🧘⌚"] += 1
        
        # 요리/간식
        if ans in ["요리", "밥", "간식 🍫"]:
            inventions["스마트 쿠커 🍲🤖"] += 2
            inventions["무한 스낵 머신 🍩🍫"] += 2
            inventions["마법 냉장고 🧊🍎"] += 1
        
        # 시간
        if ans in ["시간 관리 ⏳", "시간"]:
            inventions["시간 확장 워치 ⌚✨"] += 3
            inventions["미래 예측 노트북 📓🔮"] += 1
        
        # 친구/사람
        if ans in ["친구", "집에서 쉰다"]:
            inventions["친구 홀로그램 소환기 🪄🖼️"] += 2
            inventions["AI 대화 친구 🤖💬"] += 1
        
        # 돈 관련
        if ans in ["돈 부족할 때", "돈"]:
            inventions["지갑 가드 💳🚫"] += 3
            inventions["무한 배터리 파워팩 🔋⚡"] += 1

    # ---------------- 최종 결과 ---------------- #
    best = max(inventions, key=inventions.get)
    st.success(f"🎉 당신에게 꼭 맞는 발명품은 👉 **{best}** 입니다!")
