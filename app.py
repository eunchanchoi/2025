import streamlit as st

st.set_page_config(page_title="✨ 나만의 발명품 추천기 ✨", page_icon="💡", layout="centered")

st.title("💡 일상속의 발명품 테스트 (DAIN) 🚀✨")
st.write("당신의 생활 습관과 성향에 따라 꼭 필요한 **새로운 발명품**을 추천해드려요!")

# 질문 리스트 (10개)
questions = [
    "요즘 당신의 가장 큰 고민은 무엇인가요?",
    "아침에 일어나면 가장 먼저 드는 생각은?",
    "여가시간에 주로 하고 싶은 것은?",
    "스트레스를 받을 때 보통 어떻게 풀고 싶나요?",
    "하루 중 가장 피곤한 시간은 언제인가요?",
    "친구와 만날 때 가장 중요하게 생각하는 것은?",
    "집에서 시간을 보낼 때 꼭 필요한 것은?",
    "학교/직장에서 가장 불편한 점은?",
    "여행을 갈 때 꼭 챙기고 싶은 것은?",
    "앞으로 발명품이 당신을 어떻게 도와주길 바라나요?"
]

# 각 질문별 선택지 (간단 예시)
options = [
    ["피곤함", "시간 부족", "돈 부족"],
    ["더 자고 싶다", "오늘 뭐 먹지?", "휴대폰 확인!"],
    ["게임/영화", "운동", "그냥 잠"],
    ["맛있는 음식", "친구와 대화", "혼자만의 시간"],
    ["아침", "점심", "저녁"],
    ["재미", "편안함", "활발한 활동"],
    ["TV/스마트폰", "간식", "침대"],
    ["시간이 부족하다", "환경이 불편하다", "집중이 잘 안된다"],
    ["간식", "카메라", "편안한 옷"],
    ["피로 해결", "시간 절약", "재미 제공"]
]

# 발명품 후보 (30개 예시)
inventions = [
    "스스로 충전되는 무한 에너지 보조배터리 🔋",
    "내 기분에 맞춰 음악을 자동 재생하는 이어폰 🎶",
    "잠을 보충해주는 수면 안경 😴",
    "자동으로 과제를 해주는 인공지능 펜 ✍️",
    "말하는대로 바로 요리해주는 인공지능 냄비 🍲",
    "공부할 때 집중력을 높여주는 뇌파 밴드 🧠",
    "스스로 충전되는 스마트폰 📱",
    "걸으면 칼로리 자동 소모되는 신발 👟",
    "내 기분에 맞춰 옷 색이 변하는 티셔츠 👕",
    "공부할 때 주변 소음을 자동 차단하는 버블 🫧",
    "초스피드 숙면을 돕는 베개 🛏️",
    "자동으로 메모를 정리해주는 노트 📓",
    "내가 원하는 맛으로 변하는 사탕 🍬",
    "카페인 대신 에너지 파워 팔찌 ⚡",
    "자동 청소되는 방바닥 청소기 🧹",
    "분위기에 맞게 향기를 뿜어주는 디퓨저 🌸",
    "친구 대신 대화해주는 AI 로봇 🤖",
    "집에서 바로 영화관을 만들어주는 안경 🎥",
    "음식 칼로리를 자동으로 계산해주는 접시 🍽️",
    "마법처럼 숙제를 줄여주는 앱 📱",
    "비 오는 날 자동으로 따라오는 우산 ☔",
    "언제든지 충전되는 무선 이어폰 🎧",
    "책 내용을 자동 요약해주는 리더기 📚",
    "기분 따라 조명 색이 바뀌는 방등 💡",
    "내가 잊어버린 걸 미리 알려주는 팔찌 ⏰",
    "냉장고 속 재료로 레시피 추천해주는 AI 🍳",
    "피곤하면 자동으로 커피 내리는 컵 ☕",
    "학교 숙제를 자동 정리해주는 앱 📑",
    "집중력 강화 초콜릿 🍫",
    "아무데서나 바로 쉴 수 있는 접이식 캡슐 🛸"
]

# 답변을 저장할 리스트
answers = []

st.subheader("📋 맞춤형 질문지")

# 질문 표시
for i, q in enumerate(questions):
    answer = st.selectbox(
        f"### ❓ {q}",  # 질문을 크게 표시
        options[i],
        key=f"q{i}"
    )
    answers.append(answer)

# 결과 버튼
if st.button("🚀 나에게 꼭 맞는 발명품 찾기!"):
    # 단순히 답변 개수를 기반으로 점수 계산
    total_score = sum([len(a) for a in answers])
    recommended = inventions[total_score % len(inventions)]

    st.success(f"✨ 당신에게 꼭 맞는 발명품은... **{recommended}** ✨")
